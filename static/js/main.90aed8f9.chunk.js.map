{"version":3,"sources":["constant/ActionTypes.js","actions/Actions.js","component/TaskForm.js","component/Search.js","component/Sort.js","component/Control.js","component/TaskItem.js","component/TableView.js","component/Test.js","App.js","reportWebVitals.js","reducers/filterReducer.js","reducers/listWorkReducer.js","reducers/workEditReducer.js","reducers/sortWorkReducer.js","reducers/myReducer.js","reducers/isDisplayFormReducer.js","index.js"],"names":["LIST_WORK","ADD_WORK","TOGGLE_STATUS","TOGGLE_FORM","OPEN_FORM","CLOSE_FORM","DELETE_WORK","EDIT_WORK","UPDATE_WORK","CANCEL_EDIT_WORK","FILTER_WORK","SORT_WORK","SEARCH_WORK","actionEditWork","work","type","types","actionCancelEditWork","TaskForm","props","onAddWork","event","state","onClear","closeForm","onChangeValue","name","target","value","setState","id","status","onUpdateWork","obj","workEdit","updateWork","onCloseForm","cancelEditWork","console","log","this","nextProps","className","onClick","htmlFor","placeholder","onChange","Component","connect","dispatch","actionAddWork","actionUpdateWork","Search","onChangeFilter","onSearch","searchWork","filterName","filter","actionSearchWork","Sort","sortWork","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","by","role","sort","actionSortWork","Control","onSort","TaskItem","stt","toggleStatus","editWork","deleteWork","actionToggleStatus","actionDeleteWork","TableView","parseInt","filterWork","listWork","element","toLowerCase","indexOf","sortBy","fil_1","sortType","fil_2","concat","a","b","elementItems","map","index","actionFilterWork","Test","App","solveAddWork","toggleDisplayForm","elementTaskForm","isDisplayForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initinalState","localStorage","getItem","JSON","parse","s4","Math","floor","random","toString","substring","generateID","findIndex","i","length","myReducer","combineReducers","action","push","setItem","stringify","splice","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.90aed8f9.chunk.js","sourcesContent":["export const LIST_WORK = \"LIST_WORK\";\r\nexport const ADD_WORK = \"ADD_WORK\";\r\nexport const TOGGLE_STATUS = \"TOGGLE_STATUS\";\r\nexport const TOGGLE_FORM = \"TOGGLE_FORM\";\r\nexport const OPEN_FORM = \"OPEN_FORM\";\r\nexport const CLOSE_FORM = \"CLOSE_FORM\";\r\nexport const DELETE_WORK = \"DELETE_WORK\";\r\nexport const EDIT_WORK = \"EDIT_WORK\";\r\nexport const UPDATE_WORK= \"UPDATE_WORK\";\r\nexport const CANCEL_EDIT_WORK = \"CANCEL_EDIT_WORK\";\r\nexport const FILTER_WORK = \"FILTER_WORK\";\r\nexport const SORT_WORK = \"SORT_WORK\";\r\nexport const SEARCH_WORK = \"SEARCH_WORK\";","import * as types from \"../constant/ActionTypes\";\r\n\r\nexport const actionListWork = () => {\r\n  return {\r\n    type: types.LIST_WORK,\r\n  };\r\n};\r\n\r\nexport const actionAddWork = (work) => {\r\n  return {\r\n    type: types.ADD_WORK,\r\n    work,\r\n  };\r\n};\r\n\r\nexport const actionToggleStatus = (work) => {\r\n  return {\r\n    type: types.TOGGLE_STATUS,\r\n    work,\r\n  };\r\n};\r\n\r\nexport const actionToggleForm = () => {\r\n  return {\r\n    type: types.TOGGLE_FORM,\r\n  };\r\n};\r\n\r\nexport const actionOpenForm = () => {\r\n  return {\r\n    type: types.OPEN_FORM,\r\n  };\r\n};\r\n\r\nexport const actionCloseForm = () => {\r\n  return {\r\n    type: types.CLOSE_FORM,\r\n  };\r\n};\r\n\r\nexport const actionDeleteWork = (work) => {\r\n  return {\r\n    type: types.DELETE_WORK,\r\n    work,\r\n  };\r\n};\r\n\r\nexport const actionEditWork = (work) => {\r\n  return {\r\n    type: types.EDIT_WORK,\r\n    work,\r\n  };\r\n};\r\n\r\nexport const actionCancelEditWork = () => {\r\n  return {\r\n    type: types.CANCEL_EDIT_WORK,\r\n  };\r\n};\r\n\r\n\r\nexport const actionUpdateWork = (work)=> {\r\n    return {\r\n        type: types.UPDATE_WORK,\r\n        work,\r\n    }\r\n}\r\n\r\n\r\nexport const actionFilterWork = (filter)=> {\r\n    return {\r\n        type: types.FILTER_WORK,\r\n        filter,\r\n    }\r\n}\r\n\r\nexport const actionSortWork = (sort)=> {\r\n    return {\r\n        type: types.SORT_WORK,\r\n        sort,\r\n    }\r\n}\r\n\r\nexport const actionSearchWork = (filter)=> {\r\n    return {\r\n        type: types.SEARCH_WORK,\r\n        filter,\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  actionAddWork,\r\n  actionCancelEditWork,\r\n  actionCloseForm,\r\n  actionUpdateWork,\r\n} from \"../actions/Actions\";\r\nclass TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      name: \"\",\r\n      status: false,\r\n    };\r\n  }\r\n\r\n\r\n  // Ly do dung cai nay de khi bam edit se ngay sanng input va select\r\n  // do ta dung onchange neu ma lay work list tu props thi moi ta ko the nao ma nhap du lieu duoc, vi moi lan thaydoi la render lai nhung mno lai workEdit.name cung lap lai\r\n  //=> ko the edit duoc\r\n  componentWillMount() {\r\n    console.log(\"calling1....\");\r\n    if (this.props.workEdit.id !== \"\")\r\n      this.setState({\r\n        name: this.props.workEdit.name,\r\n        status: this.props.workEdit.status,\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(\"calling2....\");\r\n    // console.log(nextProps.workEdit);\r\n    if (nextProps && nextProps.workEdit)\r\n      this.setState({\r\n        name: nextProps.workEdit.name,\r\n        status: nextProps.workEdit.status,\r\n      });\r\n\r\n  }\r\n\r\n  onAddWork = (event) => {\r\n    // event.preventDefault();\r\n    this.props.onAddWork(this.state);\r\n\r\n    // clear state va close form;\r\n    this.onClear();\r\n    this.props.closeForm();\r\n  };\r\n\r\n  onChangeValue = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    if (name === \"status\") value = value === \"true\" ? true : false;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      id: \"\",\r\n      name: \"\",\r\n      status: false,\r\n    });\r\n  };\r\n\r\n  onUpdateWork = () => {\r\n    var obj = {\r\n      id: this.props.workEdit.id,\r\n      name: this.state.name,\r\n      status: this.state.status,\r\n    };\r\n    this.props.updateWork(obj);\r\n    this.props.closeForm();\r\n  };\r\n\r\n  onCloseForm = ()=> {\r\n    var flag = this.props.workEdit;\r\n    if(flag.id === '') \r\n      this.props.closeForm();\r\n    else\r\n      this.props.cancelEditWork();\r\n  }\r\n  render() {\r\n    var { workEdit, cancelEditWork } = this.props;\r\n    console.log(\"TaskForm\");\r\n    return (\r\n      <div className=\"TaskForm\">\r\n        <div className=\"panel panel-warning\">\r\n          <div className=\"panel-heading\">\r\n            <h3 className=\"panel-title\">\r\n              {workEdit.id === '' ? \"Add work\" : \"Edit work\"}\r\n              {/* Add work */}\r\n              <i\r\n                className=\"fa fa-times-circle fr\"\r\n                onClick={\r\n                  this.onCloseForm\r\n                }\r\n              ></i>\r\n              <div className=\"clear\"></div>\r\n            </h3>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Name: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  placeholder=\"Input work...\"\r\n                  onChange={this.onChangeValue}\r\n                  value={this.state.name}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"\">Status: </label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"status\"\r\n                  onChange={this.onChangeValue}\r\n                  value={this.state.status}\r\n                >\r\n                  <option value={false}>Hidden</option>\r\n                  <option value={true}>Active</option>\r\n                </select>\r\n              </div>\r\n              <br />\r\n              <div className=\"text-center\">\r\n                <button\r\n                  // type={workEdit === null ? \"submit\" : \"button\"}\r\n                  type=\"button\"\r\n                  className=\"btn btn-warning\"\r\n                  onClick={\r\n                    workEdit.id === '' ? this.onAddWork : this.onUpdateWork\r\n                  }\r\n                >\r\n                  {workEdit.id === '' ? \"Save\" : \"Update\"}\r\n                </button>\r\n                &nbsp;&nbsp;\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-danger\"\r\n                  onClick={workEdit.id === '' ? this.onClear : cancelEditWork}\r\n                >\r\n                  {workEdit.id === '' ? \"Delete\" : \"Cancel\"}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    workEdit: state.workEdit,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onAddWork: (work) => {\r\n      dispatch(actionAddWork(work));\r\n    },\r\n    closeForm: () => {\r\n      dispatch(actionCloseForm());\r\n    },\r\n    cancelEditWork: () => {\r\n      dispatch(actionCancelEditWork());\r\n    },\r\n    updateWork: (work) => {\r\n      dispatch(actionUpdateWork(work));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionSearchWork } from \"../actions/Actions\";\r\n\r\nclass Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filterName: \"\",\r\n    };\r\n  }\r\n\r\n  onChangeFilter = (event) => {\r\n    var name = event.target.name;\r\n    var value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  onSearch = () => {\r\n    this.props.searchWork({ name: this.state.filterName, value: 0 });\r\n    this.setState({\r\n      filterName: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    var { filterName } = this.state;\r\n    // var {onSearch} = this.props;\r\n    return (\r\n      <div className=\"Search\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            name=\"filterName\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Input key word...\"\r\n            value={filterName}\r\n            onChange={this.onChangeFilter}\r\n          />\r\n\r\n          <span className=\"input-group-btn\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.onSearch}\r\n            >\r\n              <i className=\"fas fa-search mr-10\"></i>Search\r\n            </button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nvar mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    searchWork: (filter) => {\r\n      dispatch(actionSearchWork(filter));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionSortWork } from \"../actions/Actions\";\r\n\r\nclass Sort extends Component {\r\n  render() {\r\n    var {sortWork} = this.props;\r\n    return (\r\n      <div className=\"Sort\">\r\n        <div className=\"dropdown\">\r\n          <button\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            type=\"button\"\r\n            id=\"dropdownMenu1\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"true\"\r\n            \r\n          >\r\n            Sort\r\n            <i className=\"fas fa-caret-square-down ml-10\"></i>\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n            <li onClick={()=>{sortWork({by: 'name', value: 0})}}>\r\n              <a role=\"button\" className=\"sortSelected\">\r\n                <i className=\"fas fa-sort-alpha-up-alt mr-10\"></i>\r\n                Name A-Z\r\n              </a>\r\n            </li>\r\n            <li onClick={()=>{sortWork({by: 'name', value: 1})}}>\r\n              <a role=\"button\" className=\"sortSelected\">\r\n                <i className=\"fas fa-sort-alpha-down-alt mr-10\"></i>\r\n                Name Z-A\r\n              </a>\r\n            </li>\r\n            <li role=\"separtor\" className=\"divider\"></li>\r\n            <li onClick={()=>{sortWork({by: 'status', value: 0})}}>\r\n              <a role=\"button\">Stutus Active</a>\r\n            </li>\r\n            <li onClick={()=>{sortWork({by: 'status', value: 1})}}>\r\n              <a role=\"button\">Stutus Hidden</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nvar mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    sortWork: (sort) => {\r\n      dispatch(actionSortWork(sort));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sort);\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\nimport Sort from \"./Sort\";\r\n\r\nexport default class Control extends Component {\r\n  render() {\r\n    var {onSearch, onSort} = this.props;\r\n    return (\r\n      <div className='Control'>\r\n          \r\n        {/* Search */}\r\n        <div className=\"row mt-20\">\r\n          <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <Search onSearch={onSearch}/>\r\n          </div>\r\n\r\n          {/* Sort */}\r\n\r\n          <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n           <Sort onSort={onSort}/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  actionDeleteWork,\r\n  actionEditWork,\r\n  actionToggleStatus,\r\n} from \"../actions/Actions\";\r\nclass TaskItem extends Component {\r\n  componentWillMount() {\r\n    console.log(\"running....\");\r\n  }\r\n  render() {\r\n    console.log(\"TaskItem\");\r\n    var { work, stt} = this.props;\r\n    return (\r\n      <tr className=\"TaskItem\">\r\n        <td>{stt + 1}</td>\r\n        <td>{work.name}</td>\r\n        <td className=\"text-center\">\r\n          {work.status ? (\r\n            <span\r\n              className=\"label label-success cs-point\"\r\n              onClick={() => {\r\n                this.props.toggleStatus(work);\r\n              }}\r\n            >\r\n              Active\r\n            </span>\r\n          ) : (\r\n            <span\r\n              className=\"label label-danger cs-point\"\r\n              onClick={() => {\r\n                this.props.toggleStatus(work);\r\n              }}\r\n            >\r\n              Hidden\r\n            </span>\r\n          )}\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={() => {\r\n              this.props.editWork(work);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-pencil-alt mr-5\"></i>Edit\r\n          </button>\r\n          &nbsp;&nbsp;\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              this.props.deleteWork(work);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-trash-alt mr-5\"></i>Delete\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nvar mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    toggleStatus: (work) => {\r\n      dispatch(actionToggleStatus(work));\r\n    },\r\n    deleteWork: (work) => {\r\n      dispatch(actionDeleteWork(work));\r\n    },\r\n    editWork: (work) => {\r\n      dispatch(actionEditWork(work));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskItem);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionFilterWork } from \"../actions/Actions\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass TableView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      status: 0, // 0 == all, 1 = active, 2 = hidden\r\n    };\r\n  }\r\n\r\n  onChangeFilter = (event) => {\r\n    var name = event.target.name;\r\n    var value = event.target.value;\r\n    if (name === \"status\") value = parseInt(value);\r\n    var obj = {\r\n      name: name === \"name\" ? value : this.state.name,\r\n      status: parseInt(name === \"status\" ? value : this.state.status),\r\n    };\r\n    this.props.filterWork(obj);\r\n\r\n    // muc dich la khi ben cha render lai thi van cap nhap duoc gia tri filter\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\"TableView redering.....\");\r\n    console.log(this.props.listWork);\r\n    var { listWork, filter, sort } = this.props;\r\n    console.log(sort);\r\n    if (filter.name !== \"\") {\r\n      listWork = listWork.filter((element) => {\r\n        return (\r\n          element.name.toLowerCase().indexOf(filter.name.toLowerCase()) !== -1\r\n        );\r\n      });\r\n    }\r\n    console.log(filter.status);\r\n    if (filter.status !== 0)\r\n      listWork = listWork.filter((element) => {\r\n        return element.status === (filter.status === 1 ? true : false);\r\n      });\r\n\r\n    if (sort.sortBy === \"status\") {\r\n      var fil_1 = listWork.filter((element) => {\r\n        return element.status === sort.sortType;\r\n      });\r\n\r\n      var fil_2 = listWork.filter((element) => {\r\n        return element.status !== sort.sortType;\r\n      });\r\n      listWork = fil_1.concat(fil_2);\r\n    } else {\r\n      if (sort.sortType === true)\r\n        listWork.sort((a, b) => {\r\n          if (a.name > b.name) return 1;\r\n          else if (a.name < b.name) return -1;\r\n          else return 0;\r\n        });\r\n      else\r\n        listWork.sort((a, b) => {\r\n          if (a.name > b.name) return -1;\r\n          else if (a.name < b.name) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    console.log(listWork);\r\n    var elementItems = listWork.map((element, index) => {\r\n      return (\r\n        <TaskItem\r\n          key={index}\r\n          work={element}\r\n          stt={index}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"TableView\">\r\n        <table className=\"table table-bordered table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"text-center\">STT</th>\r\n              <th className=\"text-center\">Name</th>\r\n              <th className=\"text-center\">Status</th>\r\n              <th className=\"text-center\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td></td>\r\n              <td>\r\n                <input\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  onChange={this.onChangeFilter}\r\n                  value={this.state.name}\r\n                />\r\n              </td>\r\n\r\n              <td>\r\n                <select\r\n                  name=\"status\"\r\n                  className=\"form-control\"\r\n                  onChange={this.onChangeFilter}\r\n                  value={this.state.status}\r\n                >\r\n                  <option value={0}>All</option>\r\n                  <option value={1}>Active</option>\r\n                  <option value={2}>Hidden</option>\r\n                </select>\r\n              </td>\r\n\r\n              <td></td>\r\n            </tr>\r\n\r\n            {elementItems}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// tuc la this.props = {listWork: state.listWork}\r\n// Giong ben cha listWork = {listWork},\r\n\r\nvar mapStateToProps = (state) => {\r\n  return {\r\n    listWork: state.listWork,\r\n    filter: state.filter,\r\n    sort: state.sort,\r\n  };\r\n};\r\n\r\nvar mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    filterWork: (filter) => {\r\n      dispatch(actionFilterWork(filter));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TableView);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Test extends Component {\r\n    \r\n    render() {\r\n        console.log(\"DAng redering nha moi nguoi\", this.props.listWork);\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nvar mapStateToProps = (state)=> {\r\n   return {\r\n    //    isDisplayForm: state.isDisplayForm,\r\n    listWork: state.listWork,\r\n   } \r\n}\r\n\r\nexport default connect(mapStateToProps, null) (Test);","import React, { Component } from \"react\";\nimport TaskForm from \"./component/TaskForm\";\nimport Control from \"./component/Control\";\nimport TableView from \"./component/TableView\";\nimport \"./css/style.css\";\nimport {\n  actionCancelEditWork,\n  actionEditWork,\n  actionToggleForm,\n} from \"./actions/Actions\";\nimport { connect } from \"react-redux\";\nimport Test from \"./component/Test\";\nclass App extends Component {\n  solveAddWork = () => {\n    var flag = this.props.workEdit;\n    if (flag.id === \"\") this.props.toggleDisplayForm();\n    else this.props.editWork({ id: \"\", name: \"\", status: false });\n  };\n  render() {\n    console.log(\"APP\");\n\n    // if (sort.sortBy === \"status\") {\n    //   var fil_1 = listWork.filter((element) => {\n    //     return element.status === sort.sortType;\n    //   });\n\n    //   var fil_2 = listWork.filter((element) => {\n    //     return element.status !== sort.sortType;\n    //   });\n    //   listWork = fil_1.concat(fil_2);\n    // } else {\n    //   if (sort.sortType === true)\n    //     listWork.sort((a, b) => {\n    //       if (a.name > b.name) return 1;\n    //       else if (a.name < b.name) return -1;\n    //       else return 0;\n    //     });\n    //   else\n    //     listWork.sort((a, b) => {\n    //       if (a.name > b.name) return -1;\n    //       else if (a.name < b.name) return 1;\n    //       else return 0;\n    //     });\n    // }\n    var elementTaskForm = this.props.isDisplayForm ? <TaskForm /> : \"\";\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1 className=\"mb-100\">Manager work</h1>\n          </div>\n\n          <div className=\"row\">\n            <div\n              className={\n                this.props.isDisplayForm\n                  ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\"\n                  : \"\"\n              }\n            >\n              {/* Form */}\n              {elementTaskForm}\n              {/* <TaskForm /> */}\n            </div>\n\n            <div\n              className={\n                !this.props.isDisplayForm\n                  ? \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n                  : \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n              }\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-primary\"\n                onClick={this.solveAddWork}\n              >\n                <i className=\"fas fa-plus mr-10\"></i>Add work\n              </button>\n              {/* &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={this.changeState}\n              >\n                <i className=\"fas fa-plus mr-10\"></i>Change State\n              </button> */}\n\n              {/* Search and sort */}\n              <br />\n              <br />\n              <Control onSearch={this.onSearch} onSort={this.onSort} />\n              {/* LIST */}\n              <br />\n              <br />\n              <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                  <TableView />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Test/>\n      </div>\n    );\n  }\n}\n\nvar mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    workEdit: state.workEdit,\n  };\n};\n\nvar mapDispatchToProps = (dispatch, props) => {\n  return {\n    toggleDisplayForm: () => {\n      dispatch(actionToggleForm());\n    },\n    cancelEditWork: () => {\n      dispatch(actionCancelEditWork());\n    },\n    editWork: (work) => {\n      dispatch(actionEditWork(work));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from '../constant/ActionTypes';\r\nvar initinalState = {\r\n    name: '',\r\n    status: 0\r\n}\r\n\r\n\r\nexport var filterReducer = (state = initinalState, action)=> {\r\n    switch(action.type) {\r\n        case types.FILTER_WORK:\r\n            state = action.filter;\r\n            return {...state};\r\n        case types.SEARCH_WORK:\r\n            state = {\r\n                name: action.filter.name,\r\n                status: 0,\r\n            }\r\n            return {...state};\r\n        default: \r\n            return state;\r\n    }\r\n};","import * as types from \"../constant/ActionTypes\";\r\nvar initinalState =\r\n  localStorage && localStorage.getItem(\"listWork\")\r\n    ? JSON.parse(localStorage.getItem(\"listWork\"))\r\n    : [];\r\n\r\nvar s4 = () => {\r\n  return Math.floor(1 + Math.random() * 0x10000)\r\n    .toString(16)\r\n    .substring(1);\r\n};\r\nvar generateID = () => {\r\n  return (\r\n    s4() +\r\n    \" \" +\r\n    s4() +\r\n    s4() +\r\n    \" \" +\r\n    s4() +\r\n    s4() +\r\n    \" \" +\r\n    s4() +\r\n    s4() +\r\n    \" \" +\r\n    s4() +\r\n    s4() +\r\n    \" \" +\r\n    s4() +\r\n    s4() +\r\n    \" \" +\r\n    s4()\r\n  );\r\n};\r\n\r\nvar findIndex = (listWork, work) => {\r\n  var index = -1;\r\n  for (var i = 0; i < listWork.length; i++)\r\n    if (listWork[i].id === work.id) {\r\n      index = i;\r\n      break;\r\n    }\r\n  return index;\r\n};\r\n\r\nexport var listWorkReducer = (state = initinalState, action) => {\r\n  var index = 0;\r\n  switch (action.type) {\r\n    case types.LIST_WORK:\r\n      return state;\r\n    case types.ADD_WORK:\r\n      action.work.id = generateID();\r\n      state.push(action.work);\r\n      //   console.log(state);\r\n      localStorage.setItem(\"listWork\", JSON.stringify(state));\r\n      return [...state];\r\n    case types.TOGGLE_STATUS:\r\n      index = findIndex(state, action.work);\r\n      state[index] = {\r\n        // clone object, neu muon thay doi thuoc tinh ben trong thi phai thay doi gia tri thuoc tinh + thay doi tham chieu luon.\r\n        ...state[index],\r\n        status: !state[index].status,\r\n      };\r\n      localStorage.setItem(\"listWork\", JSON.stringify(state));\r\n      return [...state];\r\n    // c2\r\n    // neu de\r\n    //  state[index].status = !state[index].status //  do tinh nang cua nest\r\n    // state[index].status = !state[index].status;\r\n    // return JSON.parse(JSON.stringify(state));\r\n    case types.DELETE_WORK:\r\n      index = findIndex(state, action.work);\r\n      state.splice(index, 1);\r\n      localStorage.setItem(\"listWork\", JSON.stringify(state));\r\n      return [...state];\r\n    case types.UPDATE_WORK:\r\n        console.log(\".......\");\r\n        index = findIndex(state, action.work);\r\n        state[index] = action.work;\r\n        localStorage.setItem(\"listWork\", JSON.stringify(state));\r\n        return [...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// ko state thay doi hoan toan thi rendering lai cac component nao ma xu dung state mapStateToProps.\r\n\r\n// truong hop nested object (tuc cac object nong nhau)\r\n// [\r\n//     {},\r\n//     {},\r\n//     {},\r\n//     {id: id, name: name, status},\r\n/// vi bai tren tim duoc index cua object nam trong array\r\n// ta thay doi dung state[index].status = !state[index].status   nest\r\n// ve ban chat no da thay doi nhuwng redring se ko chay lai\r\n// muon chay duoc thi phan tu trong mang phai thay doi tuc la thuoc tinh cua phan tu do thay doi(ma no co doi hoi ca address nua)\r\n\r\n// neu ta dung cach tren state[index].status != index[index].status\r\n// thi ta phai copy toan bij sang vung nho khac\r\n\r\n// nest object\r\n// [\r\n//     {},\r\n//     {},\r\n// ]\r\n\r\n// NOTE>>>>NOTE\r\n// khi dung redux khi thay doi state => thi bat ky cac component nao su dung state thi se deu rendering lai (doi voi kieu object thi state phi tham chieu vung nho khac va cac object nest object ben trong cung phai it nha 1object thay doi vi tri nua) cu the vd tren.Or co 1 cach rendering lai la toan nest object deu thay doi address tham doi. Vi thong thuong [...arr] thif chi co array thay doi con object ben trong  thi ko ==> khi return object ta se lam JSON.stringify(JSON.parse(arr)) la thay doi hoan toan address ca arr va ca object ben trong\r\n// ========> viec render lai phu thuoc vao 2 yeu to:\r\n// TH bt ko noi nhung TH nest object or object\r\n// C1 kh reducer xong thi cac state deu phai tham chieu vung nho khac // DUNG JSON\r\n// C2 ap voi nested object: thay doi vi tri array ben ngoai (return [...array]) va cac object ben trong phai duoc them moi, xoa, or thay doi\r\n//  doi voi th thay doi thuoc tinh ben trong object ta ko the array[index].status = true (ko duoc vi ban chat object van tham chieu den vunf gnho do) => khac phuc thay doi tham chieu tuc array[index] = [...array[index], status = false] , nhu nau moithanh cong\r\n\r\n// object nam ben trong array . thi khi reducer thi address cua state tuc array thay doi va is nhat 1 thang object ben trong thay doi object\r\n// state[index].status = !state[index].status thi address object van du nguyen chi cac gia tri ben trong thay doi => ko redering lai\r\n\r\n// dieu kien la state cac phan tu ben trong phai thay doi.(neu la object thi tham chieu den vung nho khac) (ko phai la nested object) or state thay doi gia tri tuc them, mat di(doi voi array)\r\n// th ow tren object long array thi component rendering lai khi 1 phan trong array thay doi, them or bot,\r\n// TH thay doi object thi phai thay doi cac vung nho cua no. Nhung neu thuoc tinh trong object thi ko duoc. vi ban theo cach noi o tren thi\r\n//object vaan tham thieu den o nho do chi co gia tri la thay doi ma thoi(cach khac phuc la clone cai obj y ra giong cach 1)\r\n","import * as types from \"../constant/ActionTypes\";\r\n\r\nvar initinalState = {\r\n  id: \"\",\r\n  name: \"\",\r\n  status: false,\r\n};\r\n\r\n// var findIndex = (listWork, work) => {\r\n//   var index = -1;\r\n//   for (var i = 0; i < listWork.length; i++)\r\n//     if (listWork[i].id === work.id) {\r\n//       index = i;\r\n//       break;\r\n//     }\r\n//   return index;\r\n// };\r\n\r\nexport var workEditReducer = (state = initinalState, action) => {\r\n  switch (action.type) {\r\n    case types.EDIT_WORK:\r\n      state = action.work;\r\n      return state;\r\n    case types.CANCEL_EDIT_WORK:\r\n      return {\r\n        id: \"\",\r\n        name: \"\",\r\n        status: false,\r\n      };\r\n    case types.UPDATE_WORK:\r\n      return {\r\n        id: \"\",\r\n        name: \"\",\r\n        status: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as types from \"../constant/ActionTypes\";\r\nvar initinalState = {\r\n  sortBy: \"\",\r\n  sortType: null,\r\n};\r\n\r\nexport var sortWorkReducer = (state = initinalState, action) => {\r\n  switch (action.type) {\r\n    case types.SORT_WORK:\r\n      state = {\r\n          sortBy: action.sort.by,\r\n          sortType: (action.sort.value === 0? true: false),\r\n      };\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { filterReducer } from \"./filterReducer\";\r\nimport { isDisplayFormReducer } from \"./isDisplayFormReducer\";\r\nimport { listWorkReducer } from \"./listWorkReducer\";\r\nimport { workEditReducer } from \"./workEditReducer\";\r\nimport {sortWorkReducer} from \"./sortWorkReducer\";\r\n\r\nexport const myReducer = combineReducers({\r\n    listWork: listWorkReducer,\r\n    isDisplayForm: isDisplayFormReducer,\r\n    workEdit: workEditReducer,\r\n    filter: filterReducer,\r\n    sort: sortWorkReducer,\r\n});","import * as types from \"../constant/ActionTypes\";\r\n\r\nvar initinalState = false;\r\n\r\nexport var isDisplayFormReducer = (state = initinalState, action) => {\r\n  switch (action.type) {\r\n    case types.TOGGLE_FORM:\r\n      state = !state;\r\n      return state;\r\n    case types.OPEN_FORM:\r\n      return true;\r\n    case types.CLOSE_FORM:\r\n      return false;\r\n    case types.EDIT_WORK:\r\n        return true;\r\n    case types.CANCEL_EDIT_WORK:\r\n        return false;\r\n    // case types.UPDATE_WORK:\r\n    //     return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { myReducer } from \"./reducers/myReducer\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(myReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}